name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: test-${{ matrix.deno == 'canary' && 'canary' || 'stable' }}-${{ matrix.unstable && 'unstable' || 'stable' }}-${{ matrix.no-check && 'nocheck' || 'tsc' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deno: [v1.x, canary]
        unstable: [false, true]
        no-check: [false, true]
    env:
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    steps:
      - name: Setup Deno
        uses: denoland/setup-deno@main
        with:
          deno-version: ${{ matrix.deno }}

      - uses: actions/checkout@v2

      - name: Format
        run: deno fmt --check

      - name: Lint
        run: deno lint --unstable

      - name: Setup Tests
        run: docker-compose up -d

      - name: Test
        run: make test DENO_ARGS="${{ matrix.unstable && '--coverage=./cov --unstable' || '' }}${{ matrix.no-check && ' --no-check' || '' }}"

      - name: Generate lcov
        if: matrix.unstable && matrix.deno == 'canary'
        run: deno coverage --unstable --lcov ./cov > cov.lcov

      - name: Upload coverage
        if: matrix.unstable && matrix.deno == 'canary' && matrix.no-check
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: ./cov.lcov

      - name: Cleanup
        run: make cleanup
